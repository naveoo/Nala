import discord
from discord.ext import commands
from discord import app_commands

class Help(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @app_commands.command(name="help", description="Donne la liste des commandes disponibles.")
    async def help(self, interaction: discord.Interaction):
        await interaction.response.defer()

        embed = discord.Embed(
            title="üìå Liste des commandes utilisables",
            description="",
            color=discord.Color.blue()
        )
        embed.add_field(name="```Attention```", value="Plusieurs fonctionnalit√©es pouss√©es du bot n√©cessitent une inscription pr√©alable avec /register, il est donc vivement conseill√© de s'inscrire avant toute utilisation.")
        embed.add_field(
            name="Commandes Github",
            value=(
                "`/profile` ‚Ä¢ Permet d'afficher son profil et ses d√©p√¥ts associ√©s.\n"
                "`/list_repos` ‚Ä¢ Permet de lister tous les d√©p√¥ts disponibles √† l'utilisateur.\n"
                "`/add_repo <utilisateur/d√©p√¥t>` ‚Ä¢ Permet d'ajouter un d√©p√¥t √† son profil et de d√©finir un salon o√π recevoir les notifications suivantes :\n"
                " --- Commits\n"
                " --- Pull request ouverte\n"
                " --- Pull request ferm√©e\n"
                " --- Issue ouverte\n"
                " --- Nouveau Fork\n"
                " --- Publication de release\n"
                "`/remove_repo <utilisateur/d√©p√¥t>` ‚Ä¢ Permet d'enlever un d√©p√¥t √† son profil et de r√©initialiser les param√®tres."
                "`/last_commits <utilisateur/d√©p√¥t> ‚Ä¢ Permet d'afficher les 5 derniers commits sur un d√©p√¥t."
                "`/last_issues <utilisateur/d√©p√¥t>` ‚Ä¢ Permet d'afficher les 5 derni√®res issues d'un d√©p√¥t."
            ),
            inline=False
        )

        await interaction.followup.send(embed=embed)

async def setup(bot):
    await bot.add_cog(Help(bot))
